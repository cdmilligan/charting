All API keys use JSONP to return js which when evaluated (using eval or by script tag injections) calls a callback function.

GET: http://charting.mhnltd.co.uk/api_key
Uses the session cookie of the user to fetch their API key, calls either
charting.api_key(object) or charting.api_key_error(message), with the fields of
object as:
  foo.apiKey -> the key
  foo.user -> the username of the user

GET: http://charting.mhnltd.co.uk/verify_api_key
Verifies that this API key belongs to this user. Calls either
charting.key_verified("Verified.") or charting.key_invalid("Invalid.").

GET: http://charting.mhnltd.co.uk/goals.json?user[key]=KEY&user[name]=NAME
Calls charting.goals(goals) for this user if they are logged in or provide a
valid key, otherwise calls charting.goals_error(message).
charting.goals(goals) is passed an array of objects, with each object as:
  foo.name -> the name of the goal
  foo.created_at -> date created
  foo.updated_at -> date updated
  foo.admin_id -> user id of the admin 
                  (should probably be changed to the actual username)
  foo.id -> the id of this goal
  foo.status -> Currently always "active".

POST: http://charting.mhnltd.co.uk/notes OR
GET: http://charting.mhnltd.co.uk/create_note
Create a note using the following params, calls either
charting.note_success(note_object) or charting.note_error(message).  The params
for the POST or GET request are:
  "note[body]=" -> the body of the note
  "note[goals][]=" -> the id of a goal selected, repeated per goal (The [] at
    the end is the rails notation for this being part of an array of values)
  "source[location]=" -> source url for this note
  "source[title]=" -> title of the source (usually the page title)
  "source[doctype]=" -> type of source, "webpage" for webpages.
  "user[name]=" -> username of the person creating this note
  "user[key]=" -> API key for creating this note
The fields of the note object are body, id and creator_id.
